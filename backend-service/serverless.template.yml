service: image-analysis-service

provider:
  name: aws
  runtime: nodejs18.x

  # you can overwrite defaults here
  stage: dev
  region: ap-southeast-1
  environment:
    USER_POOL_ID: !Ref UserPool
    USER_POOL_CLIENT_ID: !Ref UserPoolClient
    IDENTITY_POOL_ID: !Ref IdentityPool
    IMAGE_ANALYSIS_BUCKET: ${self:custom.ImageAnalysisBucket.name}
  iam:
    role:
      statements: ${file(src/config/iam/IamRoleStatements.yml)}

plugins:
  # - serverless-webpack # serverless webpack plugin
  # - serverless-plugin-typescript
  - serverless-offline

resources:
  Resources:
    ImageAnalysisBucket: ${file(src/config/s3/ImageAnalysisBucket.yml)}
    #User Pool
    UserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ImageAnalysisUserPool
        AutoVerifiedAttributes:
          - email
        Schema:
          - Name: email
            AttributeDataType: String
            Required: true
            Mutable: true

    # User Pool Client
    UserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: ImageAnalysisUserPoolClient
        UserPoolId: !Ref UserPool
        GenerateSecret: false
        AllowedOAuthFlowsUserPoolClient: true
        AllowedOAuthFlows:
          - code
          - implicit

        #TODO: Will remove this ExplicitAuthFlows once the client app is done
        ExplicitAuthFlows:
          - USER_PASSWORD_AUTH
          - ADMIN_NO_SRP_AUTH
        AllowedOAuthScopes:
          - email
          - openid
        CallbackURLs:
          - http://localhost:3000/callback
        LogoutURLs:
          - http://localhost:3000/logout

    # Cognito Identity Pool
    IdentityPool:
      Type: AWS::Cognito::IdentityPool
      Properties:
        IdentityPoolName: ImageAnalysisIdentityPool
        AllowUnauthenticatedIdentities: false
        CognitoIdentityProviders:
          - ClientId: !Ref UserPoolClient
            ProviderName: !GetAtt UserPool.ProviderName

    # API Gateway Authorizer
    ApiGatewayAuthorizer:
      Type: AWS::ApiGateway::Authorizer
      Properties:
        Name: CognitoAuthorizer
        IdentitySource: method.request.header.Authorization
        RestApiId:
          Ref: ApiGatewayRestApi
        Type: COGNITO_USER_POOLS
        ProviderARNs:
          - !GetAtt UserPool.Arn

# Lambda Functions
functions:
  - ${file(src/config/functions/ImageAnalysisFunction.yml)}

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true # Node modules configuration for packaging
    packager: 'npm' # Packager that will be used to package your external modules
    excludeFiles: src/**/*.test.js
  ImageAnalysisBucket:
    name: <bucketname>-${self:provider.stage}
